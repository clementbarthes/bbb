/*
 * Gpio.cpp
 *
 *  Created on: Mar 20, 2017
 *      Author: bbb
 */

#include "Gpio.h"


Gpio::Gpio(int pinNumber) {
	this->pinNumber = pinNumber;
	ostringstream gpioPathSS;
	ofstream exportFS;
	char exportPath[] = "/sys/class/gpio/export";
	exportFS.open(exportPath);
	exportFS << this->pinNumber;
	gpioPathSS << "/sys/class/gpio/gpio" << this->pinNumber;
	gpioPath = gpioPathSS.str();
	pinDirection = 0;  // Input by default
}

int Gpio::setDirection(int dir) {
	ostringstream gpioDirectionSS;
	ofstream directionFS;
	gpioDirectionSS << gpioPath << "/direction";
	directionFS.open(gpioDirectionSS.str().c_str());
	if (dir == 0){
		directionFS << "in";
		directionFS.close();
		pinDirection = 0;
		return 0;
	}
	else if (dir == 1){
		directionFS << "out";
		directionFS.close();
		pinDirection = 1;
		return 0;
	} else {
		// Return error
		cerr << "Invalid pin direction" << endl;
		directionFS.close();
		return -1;
	}
}

int Gpio::getDirection() {
	ostringstream gpioDirectionSS;
	ifstream directionFS;
	gpioDirectionSS << gpioPath << "/direction";
	directionFS.open(gpioDirectionSS.str().c_str());

	string direction;
	directionFS >> direction;
	directionFS.close();
	if (direction == "in")
		return 0;
	else if (direction == "out")
		return 1;
	else
		return -1;
}

int Gpio::read() {
	if (pinDirection == -1)
		return -1;
	ostringstream gpioValueSS;
	ifstream valueFS;
	gpioValueSS << gpioPath << "/value";
	valueFS.open(gpioValueSS.str().c_str());
	int value;
	valueFS >> value;
	return value;
}

int Gpio::write(int value) {
}

Gpio::~Gpio() {
	// TODO Auto-generated destructor stub
}

